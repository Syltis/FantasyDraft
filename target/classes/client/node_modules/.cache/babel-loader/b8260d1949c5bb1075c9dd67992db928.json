{"remainingRequest":"/home/knut/code/lotion-webdraft/src/main/resources/client/node_modules/babel-loader/lib/index.js!/home/knut/code/lotion-webdraft/src/main/resources/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/knut/code/lotion-webdraft/src/main/resources/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/knut/code/lotion-webdraft/src/main/resources/client/src/components/Game.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/knut/code/lotion-webdraft/src/main/resources/client/src/components/Game.vue","mtime":1548532238747},{"path":"/home/knut/code/lotion-webdraft/src/main/resources/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/knut/code/lotion-webdraft/src/main/resources/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/knut/code/lotion-webdraft/src/main/resources/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/knut/code/lotion-webdraft/src/main/resources/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _JSON$stringify from \"/home/knut/code/lotion-webdraft/src/main/resources/client/node_modules/@babel/runtime-corejs2/core-js/json/stringify\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport SockJS from \"sockjs-client\";\nimport Stomp from \"webstomp-client\";\nexport default {\n  name: \"websocketdemo\",\n  data: function data() {\n    return {\n      received_messages: [],\n      send_message: null,\n      connected: false,\n      players: []\n    };\n  },\n  methods: {\n    send: function send() {\n      console.log(\"Send message:\" + this.send_message);\n\n      if (this.stompClient && this.stompClient.connected) {\n        var msg = {\n          name: this.send_message\n        };\n        this.stompClient.send(\"/app/join\", _JSON$stringify(msg), {});\n      }\n    },\n    connect: function connect() {\n      var _this = this;\n\n      this.socket = new SockJS(\"http://localhost:8080/gs-guide-websocket\");\n      this.stompClient = Stomp.over(this.socket);\n      this.stompClient.connect({}, function (frame) {\n        _this.connected = true;\n        console.log(frame);\n\n        _this.stompClient.subscribe(\"/fantasy/players/\", function (tick) {\n          console.log(tick);\n          console.log(\"Dette: \" + tick.body);\n          _this.players = JSON.parse(tick.body)['playerList'];\n        });\n      }, function (error) {\n        console.log(error);\n        _this.connected = false;\n      });\n    },\n    disconnect: function disconnect() {\n      if (this.stompClient) {\n        this.stompClient.disconnect();\n        this.players = [];\n      }\n\n      this.connected = false;\n    },\n    tickleConnection: function tickleConnection() {\n      this.connected ? this.disconnect() : this.connect();\n    }\n  },\n  mounted: function mounted() {// this.connect();\n  }\n};",{"version":3,"sources":["Game.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA,OAAA,MAAA,MAAA,eAAA;AACA,OAAA,KAAA,MAAA,iBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,iBAAA,EAAA,EADA;AAEA,MAAA,YAAA,EAAA,IAFA;AAGA,MAAA,SAAA,EAAA,KAHA;AAIA,MAAA,OAAA,EAAA;AAJA,KAAA;AAMA,GATA;AAUA,EAAA,OAAA,EAAA;AACA,IAAA,IADA,kBACA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,kBAAA,KAAA,YAAA;;AACA,UAAA,KAAA,WAAA,IAAA,KAAA,WAAA,CAAA,SAAA,EAAA;AACA,YAAA,GAAA,GAAA;AAAA,UAAA,IAAA,EAAA,KAAA;AAAA,SAAA;AACA,aAAA,WAAA,CAAA,IAAA,CAAA,WAAA,EAAA,gBAAA,GAAA,CAAA,EAAA,EAAA;AACA;AACA,KAPA;AAQA,IAAA,OARA,qBAQA;AAAA;;AACA,WAAA,MAAA,GAAA,IAAA,MAAA,CAAA,0CAAA,CAAA;AACA,WAAA,WAAA,GAAA,KAAA,CAAA,IAAA,CAAA,KAAA,MAAA,CAAA;AACA,WAAA,WAAA,CAAA,OAAA,CACA,EADA,EAEA,UAAA,KAAA,EAAA;AACA,QAAA,KAAA,CAAA,SAAA,GAAA,IAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,KAAA;;AACA,QAAA,KAAA,CAAA,WAAA,CAAA,SAAA,CAAA,mBAAA,EAAA,UAAA,IAAA,EAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,IAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,YAAA,IAAA,CAAA,IAAA;AACA,UAAA,KAAA,CAAA,OAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,IAAA,EAAA,YAAA,CAAA;AACA,SAJA;AAKA,OAVA,EAWA,UAAA,KAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,QAAA,KAAA,CAAA,SAAA,GAAA,KAAA;AACA,OAdA;AAgBA,KA3BA;AA4BA,IAAA,UA5BA,wBA4BA;AACA,UAAA,KAAA,WAAA,EAAA;AACA,aAAA,WAAA,CAAA,UAAA;AACA,aAAA,OAAA,GAAA,EAAA;AACA;;AACA,WAAA,SAAA,GAAA,KAAA;AACA,KAlCA;AAmCA,IAAA,gBAnCA,8BAmCA;AACA,WAAA,SAAA,GAAA,KAAA,UAAA,EAAA,GAAA,KAAA,OAAA,EAAA;AACA;AArCA,GAVA;AAiDA,EAAA,OAjDA,qBAiDA,CACA;AACA;AAnDA,CAAA","sourcesContent":["<template>\n    <div>\n        <button id=\"connect\" class=\"btn btn-default\" type=\"submit\" :disabled=\"connected == true\" @click.prevent=\"connect\">Connect</button>\n        <button id=\"disconnect\" class=\"btn btn-default\" type=\"submit\" :disabled=\"connected == false\" @click.prevent=\"disconnect\">Disconnect</button>\n        <button v-on:click=\"send\">Send</button>\n        <input type=\"text\" v-model=\"send_message\"/>\n    </div>\n    <div class=\"players-section\">\n        <p v-for=\"player in players\"> {{ player.name }} </p>\n    </div>\n</template>\n\n<script>\n    import SockJS from \"sockjs-client\";\n    import Stomp from \"webstomp-client\";\n\n    export default {\n        name: \"websocketdemo\",\n        data() {\n            return {\n                received_messages: [],\n                send_message: null,\n                connected: false,\n                players: []\n            };\n        },\n        methods: {\n            send() {\n                console.log(\"Send message:\" + this.send_message);\n                if (this.stompClient && this.stompClient.connected) {\n                    const msg = { name: this.send_message };\n                    this.stompClient.send(\"/app/join\", JSON.stringify(msg), {});\n                }\n            },\n            connect() {\n                this.socket = new SockJS(\"http://localhost:8080/gs-guide-websocket\");\n                this.stompClient = Stomp.over(this.socket);\n                this.stompClient.connect(\n                    {},\n                    frame => {\n                        this.connected = true;\n                        console.log(frame);\n                        this.stompClient.subscribe(\"/fantasy/players/\", tick => {\n                            console.log(tick);\n                            console.log(\"Dette: \" + tick.body);\n                        this.players = JSON.parse(tick.body)['playerList'];\n                        });\n                    },\n                    error => {\n                        console.log(error);\n                        this.connected = false;\n                    }\n                );\n            },\n            disconnect() {\n                if (this.stompClient) {\n                    this.stompClient.disconnect();\n                    this.players = [    ]\n                }\n                this.connected = false;\n            },\n            tickleConnection() {\n                this.connected ? this.disconnect() : this.connect();\n            }\n        },\n        mounted() {\n            // this.connect();\n        }\n    };\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n</style>\n"],"sourceRoot":"src/components"}]}